/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef DYNAMICGRAPHSLIDEMENUVIEWBASE_HPP
#define DYNAMICGRAPHSLIDEMENUVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/dynamicgraphslidemenu_screen/DynamicGraphSlideMenuPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/widgets/graph/GraphScroll.hpp>
#include <touchgfx/widgets/graph/GraphElements.hpp>
#include <touchgfx/widgets/graph/GraphLabels.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/containers/SlideMenu.hpp>
#include <touchgfx/widgets/ToggleButton.hpp>

class DynamicGraphSlideMenuViewBase : public touchgfx::View<DynamicGraphSlideMenuPresenter>
{
public:
    DynamicGraphSlideMenuViewBase();
    virtual ~DynamicGraphSlideMenuViewBase();
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void updateBlueGraph()
    {
        // Override and implement this function in DynamicGraphSlideMenu
    }
    virtual void updateGreenGraph()
    {
        // Override and implement this function in DynamicGraphSlideMenu
    }
    virtual void customizeScreen()
    {
        // Override and implement this function in DynamicGraphSlideMenu
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::ScalableImage background;
    touchgfx::Box box1;
    touchgfx::GraphScroll<31> dynamicGraph0;
    touchgfx::GraphElementGridY dynamicGraph0MajorYAxisGrid;
    touchgfx::GraphLabelsX dynamicGraph0MajorXAxisLabel;
    touchgfx::GraphLabelsY dynamicGraph0MajorYAxisLabel;
    touchgfx::GraphScroll<31> dynamicGraphGreen;
    touchgfx::GraphElementLine dynamicGraphGreenLine1;
    touchgfx::PainterRGB565 dynamicGraphGreenLine1Painter;
    touchgfx::GraphElementDots dynamicGraphGreenDots1;
    touchgfx::PainterRGB565 dynamicGraphGreenDots1Painter;
    touchgfx::GraphScroll<31> dynamicGraphBlue;
    touchgfx::GraphElementLine dynamicGraphBlueLine1;
    touchgfx::PainterRGB565 dynamicGraphBlueLine1Painter;
    touchgfx::GraphElementDots dynamicGraphBlueDots1;
    touchgfx::PainterRGB565 dynamicGraphBlueDots1Painter;
    touchgfx::SlideMenu slideMenu1;
    touchgfx::ToggleButton toggleBlueLine;
    touchgfx::ToggleButton toggleBlueDots;
    touchgfx::ToggleButton toggleGreenLine;
    touchgfx::ToggleButton toggleGreenDots;
    touchgfx::ToggleButton toggleBox;
    touchgfx::ToggleButton toggleGrid;

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 7200;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

    /*
     * Callback Declarations
     */
    touchgfx::Callback<DynamicGraphSlideMenuViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // DYNAMICGRAPHSLIDEMENUVIEWBASE_HPP
