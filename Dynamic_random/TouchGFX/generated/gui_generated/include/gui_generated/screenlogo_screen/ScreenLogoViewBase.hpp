/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREENLOGOVIEWBASE_HPP
#define SCREENLOGOVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screenlogo_screen/ScreenLogoPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/containers/scrollers/ScrollWheel.hpp>
#include <gui/containers/CustomContainer1.hpp>
#include <touchgfx/widgets/canvas/Shape.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/EasingEquations.hpp>
#include <touchgfx/mixins/MoveAnimator.hpp>

class ScreenLogoViewBase : public touchgfx::View<ScreenLogoPresenter>
{
public:
    ScreenLogoViewBase();
    virtual ~ScreenLogoViewBase();
    virtual void setupScreen();

    virtual void scrollWheel1UpdateItem(CustomContainer1& item, int16_t itemIndex)
    {
        // Override and implement this function in ScreenLogo
    }
    virtual void transitionBegins();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::ScalableImage scalableImage1;
    touchgfx::ScrollWheel scrollWheel1;
    touchgfx::DrawableListItems<CustomContainer1, 2> scrollWheel1ListItems;
    touchgfx::MoveAnimator< touchgfx::Shape<6> > shapeL;
    touchgfx::PainterRGB565 shapeLPainter;
    touchgfx::MoveAnimator< touchgfx::Container > container1;
    touchgfx::Shape<8> shapeA1;
    touchgfx::PainterRGB565 shapeA1Painter;
    touchgfx::Shape<4> shapeA2;
    touchgfx::PainterRGB565 shapeA2Painter;
    touchgfx::TextArea textAreaYoutube;
    touchgfx::TextArea textAreaGFX;
    touchgfx::TextArea textAreaSTM32;

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 7200;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

    /*
     * Callback Declarations
     */
    touchgfx::Callback<ScreenLogoViewBase, touchgfx::DrawableListItemsInterface*, int16_t, int16_t> updateItemCallback;

    /*
     * Callback Handler Declarations
     */
    void updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex);

};

#endif // SCREENLOGOVIEWBASE_HPP
