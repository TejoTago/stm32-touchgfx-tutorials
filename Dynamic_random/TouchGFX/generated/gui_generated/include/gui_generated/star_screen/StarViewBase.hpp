/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef STARVIEWBASE_HPP
#define STARVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/star_screen/StarPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/canvas/Shape.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/TextArea.hpp>

class StarViewBase : public touchgfx::View<StarPresenter>
{
public:
    StarViewBase();
    virtual ~StarViewBase();
    virtual void setupScreen();

    /*
     * Custom Actions
     */
    virtual void action1()
    {
        // Override and implement this function in Screen1
    }
    

    /*
     * Virtual Action Handlers
     */
    virtual void updateRating()
    {
        // Override and implement this function in Star
    }
    virtual void test()
    {
        // Override and implement this function in Star
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::ScalableImage scalableImage1;
    touchgfx::Container container1;
    touchgfx::Shape<10> star1;
    touchgfx::PainterRGB565 star1Painter;
    touchgfx::Shape<10> star2;
    touchgfx::PainterRGB565 star2Painter;
    touchgfx::Shape<10> star3;
    touchgfx::PainterRGB565 star3Painter;
    touchgfx::Shape<10> star4;
    touchgfx::PainterRGB565 star4Painter;
    touchgfx::Shape<10> star5;
    touchgfx::PainterRGB565 star5Painter;
    touchgfx::Shape<10> star1_Off;
    touchgfx::PainterRGB565 star1_OffPainter;
    touchgfx::Shape<10> star2_Off;
    touchgfx::PainterRGB565 star2_OffPainter;
    touchgfx::Shape<10> star3_Off;
    touchgfx::PainterRGB565 star3_OffPainter;
    touchgfx::Shape<10> star4_Off;
    touchgfx::PainterRGB565 star4_OffPainter;
    touchgfx::Shape<10> star5_Off;
    touchgfx::PainterRGB565 star5_OffPainter;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  flexButton1;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  flexButton2;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  flexButton3;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  flexButton4;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  flexButton5;
    touchgfx::TextAreaWithOneWildcard textArea1;
    touchgfx::TextArea textArea1_1;
    touchgfx::IconButtonStyle< touchgfx::ToggleButtonTrigger >  flexButton6;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREA1_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea1Buffer[TEXTAREA1_SIZE];

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 7200;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

    /*
     * Callback Declarations
     */
    touchgfx::Callback<StarViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // STARVIEWBASE_HPP
