/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <new>
#include <gui_generated/common/FrontendApplicationBase.hpp>
#include <gui/common/FrontendHeap.hpp>
#include <touchgfx/transitions/NoTransition.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Texts.hpp>
#include <touchgfx/hal/HAL.hpp>
#include <platform/driver/lcd/LCD16bpp.hpp>
#include <gui/dynamicgraph1_screen/DynamicGraph1View.hpp>
#include <gui/dynamicgraph1_screen/DynamicGraph1Presenter.hpp>
#include <gui/dynamicgraph_screen/DynamicGraphView.hpp>
#include <gui/dynamicgraph_screen/DynamicGraphPresenter.hpp>
#include <gui/dynamicgraphmenu_screen/DynamicGraphMenuView.hpp>
#include <gui/dynamicgraphmenu_screen/DynamicGraphMenuPresenter.hpp>
#include <gui/dynamicgraph2lines_screen/DynamicGraph2LinesView.hpp>
#include <gui/dynamicgraph2lines_screen/DynamicGraph2LinesPresenter.hpp>
#include <gui/dynamicgraphslidemenu_screen/DynamicGraphSlideMenuView.hpp>
#include <gui/dynamicgraphslidemenu_screen/DynamicGraphSlideMenuPresenter.hpp>
#include <gui/button_screen/ButtonView.hpp>
#include <gui/button_screen/ButtonPresenter.hpp>
#include <gui/screenlogo_screen/ScreenLogoView.hpp>
#include <gui/screenlogo_screen/ScreenLogoPresenter.hpp>
#include <gui/barchart_screen/BarChartView.hpp>
#include <gui/barchart_screen/BarChartPresenter.hpp>
#include <gui/radiobuttonsemaphore_screen/RadioButtonSemaphoreView.hpp>
#include <gui/radiobuttonsemaphore_screen/RadioButtonSemaphorePresenter.hpp>
#include <gui/radiobuttonsemaphorenew_screen/RadioButtonSemaphoreNewView.hpp>
#include <gui/radiobuttonsemaphorenew_screen/RadioButtonSemaphoreNewPresenter.hpp>
#include <gui/wirelessicon_screen/WirelessIconView.hpp>
#include <gui/wirelessicon_screen/WirelessIconPresenter.hpp>
#include <gui/star_screen/StarView.hpp>
#include <gui/star_screen/StarPresenter.hpp>
#include <gui/starflexbuttonicon_screen/StarFlexButtonIconView.hpp>
#include <gui/starflexbuttonicon_screen/StarFlexButtonIconPresenter.hpp>
#include <gui/dynamicgraphslidery_screen/DynamicGraphSliderYView.hpp>
#include <gui/dynamicgraphslidery_screen/DynamicGraphSliderYPresenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
    touchgfx::Texts::setLanguage(GB);
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
}

/*
 * Screen Transition Declarations
 */

// DynamicGraphSliderY

void FrontendApplicationBase::gotoDynamicGraphSliderYScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoDynamicGraphSliderYScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoDynamicGraphSliderYScreenNoTransitionImpl()
{
    touchgfx::makeTransition<DynamicGraphSliderYView, DynamicGraphSliderYPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}
