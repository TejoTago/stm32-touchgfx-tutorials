/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/star_screen/StarViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

StarViewBase::StarViewBase() :
    flexButtonCallback(this, &StarViewBase::flexButtonCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);

    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_BG_BLUE_SALMON_ID));
    scalableImage1.setPosition(0, 0, 480, 272);
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(scalableImage1);

    container1.setPosition(27, 144, 247, 74);
    star1.setPosition(23, 17, 40, 40);
    star1.setOrigin(0.0f, 0.0f);
    star1.setScale(1.0f, 1.0f);
    star1.setAngle(0.0f);
    star1Painter.setColor(touchgfx::Color::getColorFromRGB(245, 201, 7));
    star1.setPainter(star1Painter);
    const touchgfx::AbstractShape::ShapePoint<float> star1Points[10] = { { 20.0f, 0.0f }, { 25.0f, 15.0f }, { 40.0f, 20.0f }, { 25.0f, 25.0f }, { 25.0f, 40.0f }, { 20.0f, 30.0f }, { 15.0f, 40.0f }, { 15.0f, 25.0f }, { 0.0f, 20.0f }, { 15.0f, 15.0f } };
    star1.setShape(star1Points);
    container1.add(star1);

    star2.setPosition(63, 17, 40, 40);
    star2.setOrigin(0.0f, 0.0f);
    star2.setScale(1.0f, 1.0f);
    star2.setAngle(0.0f);
    star2Painter.setColor(touchgfx::Color::getColorFromRGB(245, 201, 7));
    star2.setPainter(star2Painter);
    const touchgfx::AbstractShape::ShapePoint<float> star2Points[10] = { { 20.0f, 0.0f }, { 25.0f, 15.0f }, { 40.0f, 20.0f }, { 25.0f, 25.0f }, { 25.0f, 40.0f }, { 20.0f, 30.0f }, { 15.0f, 40.0f }, { 15.0f, 25.0f }, { 0.0f, 20.0f }, { 15.0f, 15.0f } };
    star2.setShape(star2Points);
    container1.add(star2);

    star3.setPosition(103, 17, 40, 40);
    star3.setOrigin(0.0f, 0.0f);
    star3.setScale(1.0f, 1.0f);
    star3.setAngle(0.0f);
    star3Painter.setColor(touchgfx::Color::getColorFromRGB(245, 201, 7));
    star3.setPainter(star3Painter);
    const touchgfx::AbstractShape::ShapePoint<float> star3Points[10] = { { 20.0f, 0.0f }, { 25.0f, 15.0f }, { 40.0f, 20.0f }, { 25.0f, 25.0f }, { 25.0f, 40.0f }, { 20.0f, 30.0f }, { 15.0f, 40.0f }, { 15.0f, 25.0f }, { 0.0f, 20.0f }, { 15.0f, 15.0f } };
    star3.setShape(star3Points);
    container1.add(star3);

    star4.setPosition(143, 17, 40, 40);
    star4.setOrigin(0.0f, 0.0f);
    star4.setScale(1.0f, 1.0f);
    star4.setAngle(0.0f);
    star4Painter.setColor(touchgfx::Color::getColorFromRGB(245, 201, 7));
    star4.setPainter(star4Painter);
    const touchgfx::AbstractShape::ShapePoint<float> star4Points[10] = { { 20.0f, 0.0f }, { 25.0f, 15.0f }, { 40.0f, 20.0f }, { 25.0f, 25.0f }, { 25.0f, 40.0f }, { 20.0f, 30.0f }, { 15.0f, 40.0f }, { 15.0f, 25.0f }, { 0.0f, 20.0f }, { 15.0f, 15.0f } };
    star4.setShape(star4Points);
    container1.add(star4);

    star5.setPosition(183, 17, 40, 40);
    star5.setOrigin(0.0f, 0.0f);
    star5.setScale(1.0f, 1.0f);
    star5.setAngle(0.0f);
    star5Painter.setColor(touchgfx::Color::getColorFromRGB(245, 201, 7));
    star5.setPainter(star5Painter);
    const touchgfx::AbstractShape::ShapePoint<float> star5Points[10] = { { 20.0f, 0.0f }, { 25.0f, 15.0f }, { 40.0f, 20.0f }, { 25.0f, 25.0f }, { 25.0f, 40.0f }, { 20.0f, 30.0f }, { 15.0f, 40.0f }, { 15.0f, 25.0f }, { 0.0f, 20.0f }, { 15.0f, 15.0f } };
    star5.setShape(star5Points);
    container1.add(star5);

    star1_Off.setPosition(23, 17, 40, 40);
    star1_Off.setOrigin(0.0f, 0.0f);
    star1_Off.setScale(1.0f, 1.0f);
    star1_Off.setAngle(0.0f);
    star1_OffPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    star1_Off.setPainter(star1_OffPainter);
    const touchgfx::AbstractShape::ShapePoint<float> star1_OffPoints[10] = { { 20.0f, 0.0f }, { 25.0f, 15.0f }, { 40.0f, 20.0f }, { 25.0f, 25.0f }, { 25.0f, 40.0f }, { 20.0f, 30.0f }, { 15.0f, 40.0f }, { 15.0f, 25.0f }, { 0.0f, 20.0f }, { 15.0f, 15.0f } };
    star1_Off.setShape(star1_OffPoints);
    container1.add(star1_Off);

    star2_Off.setPosition(63, 17, 40, 40);
    star2_Off.setOrigin(0.0f, 0.0f);
    star2_Off.setScale(1.0f, 1.0f);
    star2_Off.setAngle(0.0f);
    star2_OffPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    star2_Off.setPainter(star2_OffPainter);
    const touchgfx::AbstractShape::ShapePoint<float> star2_OffPoints[10] = { { 20.0f, 0.0f }, { 25.0f, 15.0f }, { 40.0f, 20.0f }, { 25.0f, 25.0f }, { 25.0f, 40.0f }, { 20.0f, 30.0f }, { 15.0f, 40.0f }, { 15.0f, 25.0f }, { 0.0f, 20.0f }, { 15.0f, 15.0f } };
    star2_Off.setShape(star2_OffPoints);
    container1.add(star2_Off);

    star3_Off.setPosition(103, 17, 40, 40);
    star3_Off.setOrigin(0.0f, 0.0f);
    star3_Off.setScale(1.0f, 1.0f);
    star3_Off.setAngle(0.0f);
    star3_OffPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    star3_Off.setPainter(star3_OffPainter);
    const touchgfx::AbstractShape::ShapePoint<float> star3_OffPoints[10] = { { 20.0f, 0.0f }, { 25.0f, 15.0f }, { 40.0f, 20.0f }, { 25.0f, 25.0f }, { 25.0f, 40.0f }, { 20.0f, 30.0f }, { 15.0f, 40.0f }, { 15.0f, 25.0f }, { 0.0f, 20.0f }, { 15.0f, 15.0f } };
    star3_Off.setShape(star3_OffPoints);
    container1.add(star3_Off);

    star4_Off.setPosition(143, 17, 40, 40);
    star4_Off.setOrigin(0.0f, 0.0f);
    star4_Off.setScale(1.0f, 1.0f);
    star4_Off.setAngle(0.0f);
    star4_OffPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    star4_Off.setPainter(star4_OffPainter);
    const touchgfx::AbstractShape::ShapePoint<float> star4_OffPoints[10] = { { 20.0f, 0.0f }, { 25.0f, 15.0f }, { 40.0f, 20.0f }, { 25.0f, 25.0f }, { 25.0f, 40.0f }, { 20.0f, 30.0f }, { 15.0f, 40.0f }, { 15.0f, 25.0f }, { 0.0f, 20.0f }, { 15.0f, 15.0f } };
    star4_Off.setShape(star4_OffPoints);
    container1.add(star4_Off);

    star5_Off.setPosition(183, 17, 40, 40);
    star5_Off.setOrigin(0.0f, 0.0f);
    star5_Off.setScale(1.0f, 1.0f);
    star5_Off.setAngle(0.0f);
    star5_OffPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    star5_Off.setPainter(star5_OffPainter);
    const touchgfx::AbstractShape::ShapePoint<float> star5_OffPoints[10] = { { 20.0f, 0.0f }, { 25.0f, 15.0f }, { 40.0f, 20.0f }, { 25.0f, 25.0f }, { 25.0f, 40.0f }, { 20.0f, 30.0f }, { 15.0f, 40.0f }, { 15.0f, 25.0f }, { 0.0f, 20.0f }, { 15.0f, 15.0f } };
    star5_Off.setShape(star5_OffPoints);
    container1.add(star5_Off);

    flexButton1.setBoxWithBorderPosition(0, 0, 40, 40);
    flexButton1.setBorderSize(0);
    flexButton1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButton1.setAlpha(0);
    flexButton1.setAction(flexButtonCallback);
    flexButton1.setPosition(23, 17, 40, 40);
    container1.add(flexButton1);

    flexButton2.setBoxWithBorderPosition(0, 0, 0, 0);
    flexButton2.setBorderSize(0);
    flexButton2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButton2.setAction(flexButtonCallback);
    flexButton2.setPosition(70, 17, 40, 40);
    container1.add(flexButton2);

    flexButton3.setBoxWithBorderPosition(0, 0, 0, 0);
    flexButton3.setBorderSize(0);
    flexButton3.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButton3.setAction(flexButtonCallback);
    flexButton3.setPosition(103, 17, 40, 40);
    container1.add(flexButton3);

    flexButton4.setBoxWithBorderPosition(0, 0, 0, 0);
    flexButton4.setBorderSize(0);
    flexButton4.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButton4.setAction(flexButtonCallback);
    flexButton4.setPosition(143, 17, 40, 40);
    container1.add(flexButton4);

    flexButton5.setBoxWithBorderPosition(0, 0, 0, 0);
    flexButton5.setBorderSize(0);
    flexButton5.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButton5.setAction(flexButtonCallback);
    flexButton5.setPosition(183, 17, 40, 40);
    container1.add(flexButton5);

    add(container1);

    textArea1.setPosition(302, 153, 124, 57);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(247, 250, 250));
    textArea1.setLinespacing(0);
    Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DJRF).getText());
    textArea1.setWildcard(textArea1Buffer);
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0HQD));
    add(textArea1);

    textArea1_1.setPosition(90, 96, 124, 57);
    textArea1_1.setColor(touchgfx::Color::getColorFromRGB(247, 250, 250));
    textArea1_1.setLinespacing(0);
    textArea1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9C3H));
    add(textArea1_1);

    flexButton6.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_TOGGLE_STAR_BORDER_50_50_E8F6FB_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_TOGGLE_STAR_PURPLE500_50_50_EDED18_SVG_ID));
    flexButton6.setIconXY(0, 0);
    flexButton6.setAction(flexButtonCallback);
    flexButton6.setPosition(70, 15, 50, 50);
    add(flexButton6);
}

StarViewBase::~StarViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void StarViewBase::setupScreen()
{

}

void StarViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButton1)
    {
        //Interaction1
        //When flexButton1 clicked call virtual function
        //Call updateRating
        updateRating();
    }
    if (&src == &flexButton2)
    {
        //Interaction2
        //When flexButton2 clicked call virtual function
        //Call updateRating
        updateRating();
    }
    if (&src == &flexButton3)
    {
        //Interaction3
        //When flexButton3 clicked call virtual function
        //Call updateRating
        updateRating();
    }
    if (&src == &flexButton4)
    {
        //Interaction4
        //When flexButton4 clicked call virtual function
        //Call updateRating
        updateRating();
    }
    if (&src == &flexButton5)
    {
        //Interaction5
        //When flexButton5 clicked call virtual function
        //Call updateRating
        updateRating();
    }
    if (&src == &flexButton6)
    {
        //Interaction6
        //When flexButton6 clicked call virtual function
        //Call test
        test();
    }
}
